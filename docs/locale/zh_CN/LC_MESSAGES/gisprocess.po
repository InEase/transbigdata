# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Qing Yu
# This file is distributed under the same license as the TransBigData
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: TransBigData 0.3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-06 09:50+0800\n"
"PO-Revision-Date: 2023-06-05 20:29+0800\n"
"Last-Translator: \n"
"Language: zh_CN\n"
"Language-Team: \n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../source/gisprocess.rst:9
msgid "GIS处理"
msgstr "GIS处理"

#: ../../source/gisprocess.rst:23:<autosummary>:1
msgid ""
":py:obj:`ckdnearest <transbigdata.ckdnearest>`\\ \\(dfA\\_origin\\, "
"dfB\\_origin\\[\\, Aname\\, ...\\]\\)"
msgstr ""

#: ../../source/gisprocess.rst:23:<autosummary>:1 of
#: transbigdata.gisprocess.ckdnearest:2
msgid ""
"Search the nearest points in dfB_origin for dfA_origin, and calculate the"
" distance"
msgstr "在dfB_origin中搜索最近的点以查找dfA_origin，并计算距离"

#: ../../source/gisprocess.rst:23:<autosummary>:1
msgid ""
":py:obj:`ckdnearest_point <transbigdata.ckdnearest_point>`\\ \\(gdA\\, "
"gdB\\)"
msgstr ""

#: ../../source/gisprocess.rst:23:<autosummary>:1 of
#: transbigdata.gisprocess.ckdnearest_point:2
msgid ""
"This method will match the nearest points in gdfB to gdfA, and add a new "
"column called dist"
msgstr "此方法会将 gdfB 中最近的点与 gdfA 匹配，并添加一个名为 dist 的新列"

#: ../../source/gisprocess.rst:23:<autosummary>:1
msgid ""
":py:obj:`ckdnearest_line <transbigdata.ckdnearest_line>`\\ \\(gdfA\\, "
"gdfB\\)"
msgstr ""

#: ../../source/gisprocess.rst:23:<autosummary>:1 of
#: transbigdata.gisprocess.ckdnearest_line:2
msgid ""
"This method will seach from gdfB to find the nearest line to the point in"
" gdfA."
msgstr "此方法将从 gdfB 进行搜索，以找到离 gdfA 中点最近的线。"

#: ../../source/gisprocess.rst:23:<autosummary>:1
msgid ""
":py:obj:`splitline_with_length <transbigdata.splitline_with_length>`\\ "
"\\(Centerline\\[\\, maxlength\\]\\)"
msgstr ""

#: ../../source/gisprocess.rst:23:<autosummary>:1
msgid "The intput is the linestring GeoDataFrame."
msgstr "输入是线的GeoDataFrame。"

#: ../../source/gisprocess.rst:23:<autosummary>:1
msgid ":py:obj:`merge_polygon <transbigdata.merge_polygon>`\\ \\(data\\, col\\)"
msgstr ""

#: ../../source/gisprocess.rst:23:<autosummary>:1
msgid "The input is the GeoDataFrame of polygon geometry, and the col name."
msgstr "输入的是多边形几何的GeoDataFrame，col名。"

#: ../../source/gisprocess.rst:23:<autosummary>:1
msgid ""
":py:obj:`polyon_exterior <transbigdata.polyon_exterior>`\\ \\(data\\[\\, "
"minarea\\]\\)"
msgstr ""

#: ../../source/gisprocess.rst:23:<autosummary>:1
msgid "The input is the GeoDataFrame of the polygon geometry."
msgstr "输入是多边形几何的GeoDataFrame。"

#: ../../source/gisprocess.rst:25
msgid "近邻匹配"
msgstr "近邻配料"

#: of transbigdata.gisprocess.ckdnearest
#: transbigdata.gisprocess.ckdnearest_line
#: transbigdata.gisprocess.ckdnearest_point
#: transbigdata.gisprocess.merge_polygon
#: transbigdata.gisprocess.polyon_exterior
#: transbigdata.gisprocess.splitline_with_length
msgid "Parameters"
msgstr ""

#: of transbigdata.gisprocess.ckdnearest:5
msgid "DataFrame A"
msgstr "数据帧A"

#: of transbigdata.gisprocess.ckdnearest:7
msgid "DataFrame B"
msgstr "数据帧B"

#: of transbigdata.gisprocess.ckdnearest:9
#: transbigdata.gisprocess.ckdnearest:11
msgid "The column of lng and lat in DataFrame A"
msgstr "DataFrame A中lng和lat的列"

#: of transbigdata.gisprocess.ckdnearest
#: transbigdata.gisprocess.ckdnearest_line
#: transbigdata.gisprocess.ckdnearest_point
#: transbigdata.gisprocess.merge_polygon
#: transbigdata.gisprocess.polyon_exterior
#: transbigdata.gisprocess.splitline_with_length
msgid "Returns"
msgstr ""

#: of transbigdata.gisprocess.ckdnearest:14
#: transbigdata.gisprocess.ckdnearest_point:10
msgid "**gdf** -- The output DataFrame"
msgstr "**gdf** -- 输出数据帧"

#: of transbigdata.gisprocess.ckdnearest
#: transbigdata.gisprocess.ckdnearest_line
#: transbigdata.gisprocess.ckdnearest_point
#: transbigdata.gisprocess.merge_polygon
#: transbigdata.gisprocess.polyon_exterior
#: transbigdata.gisprocess.splitline_with_length
msgid "Return type"
msgstr ""

#: of transbigdata.gisprocess.ckdnearest_line:5
#: transbigdata.gisprocess.ckdnearest_point:5
msgid "GeoDataFrame A, point geometry"
msgstr "GeoDataFrame A，点几何"

#: of transbigdata.gisprocess.ckdnearest_point:7
msgid "GeoDataFrame B, point geometry"
msgstr "GeoDataFrame B，点几何"

#: of transbigdata.gisprocess.ckdnearest_line:7
msgid "GeoDataFrame B, linestring geometry"
msgstr "GeoDataFrame B，线串几何"

#: of transbigdata.gisprocess.ckdnearest_line:10
msgid "**gdf** -- Searching the nearset linestring in gdfB for the point in gdfA"
msgstr "**gdf** -- 在 gdfB 中的近线串中搜索 gdfA 中的点"

#: ../../source/gisprocess.rst:33
msgid "下面的案例展示如何用TransBigData包进行点与点、点与线的近邻匹配。该方法使用的是KDTree算法，可查看wiki：https://en.wikipedia.org/wiki/K-d_tree，算法复杂度为o(log(n))"
msgstr ""
"下面的案例展示如何使用TransBigData数据包进入点与点、点与线的近邻匹配。该方法使用的是KDTree算法，可查看wiki：https://en.wikipedia.org"
" /wiki/K-d_tree，"

#: ../../source/gisprocess.rst:37
msgid "Point to point matching (DataFrame and DataFrame)"
msgstr "点对点匹配（DataFrame与DataFrame）"

#: ../../source/gisprocess.rst:53
msgid ""
"Use :func:`transbigdata.ckdnearest` to match points to points, if the "
"inputs are two DataFrame without geometry columns, you should specify the"
" `lon` and `lat` columns."
msgstr ""
"使用 ：func：'transbigdata.ckdnearest' 将点与点匹配，如果输入是两个没有几何列的数据帧，则应指定 'lon' 和 "
"'lat' 列。"

#: ../../source/gisprocess.rst:60
msgid "点与点匹配（GeoDataFrame与GeoDataFrame）"
msgstr "点与点匹配（GeoDataFrame与GeoDataFrame）"

#: ../../source/gisprocess.rst:62
msgid "将A表B表变为含有点信息的GeoDataFrame"
msgstr "将A表B表变为包含点信息的GeoDataFrame"

#: ../../source/gisprocess.rst:71
msgid "使用 :func:`transbigdata.ckdnearest_point` 进行点与点匹配"
msgstr "使用:func:`transbigdata.ckdnearest_point` 进入点与点匹配"

#: ../../source/gisprocess.rst:79
msgid "点与线匹配（GeoDataFrame与GeoDataFrame）"
msgstr "点与线匹配（GeoDataFrame与GeoDataFrame）"

#: ../../source/gisprocess.rst:81
msgid "将A表变为地理点，B表为线"
msgstr "将A表变为地理点，B表为线"

#: ../../source/gisprocess.rst:96
msgid "打断线"
msgstr "打断线"

#: ../../source/gisprocess.rst:98
msgid "在实际应用中，我们可能会需要把很长的线打断为很多子线段，每一条线段不要超过一定的最大长度，此时则可以使用TransBigData包中的splitline_with_length方法。"
msgstr "在现实应用中，我们可能需要把很长的线打断为很多子线段，每一条线段不要超过一定的最大长度，此时则可以使用TransBigData包中的splitline_with_length方法。"

#: of transbigdata.gisprocess.splitline_with_length:2
msgid ""
"The intput is the linestring GeoDataFrame. The splited line’s length wull"
" be no longer than maxlength"
msgstr "输入是线串 GeoDataFrame。分割线的长度不长于最大长度"

#: of transbigdata.gisprocess.splitline_with_length:5
msgid "Linestring geometry"
msgstr "线串几何"

#: of transbigdata.gisprocess.splitline_with_length:7
msgid "The maximum length of the splited line"
msgstr "分割线的最大长度"

#: of transbigdata.gisprocess.splitline_with_length:10
msgid "**splitedline** -- Splited line"
msgstr "**splitedline** -- 分割线"

#: ../../source/gisprocess.rst:102
msgid "下面演示如何将线打断为100米一段的线段"
msgstr "下面显示如何将线打断为100米一段的线段"

#: ../../source/gisprocess.rst:432
msgid "Polygon processing"
msgstr "多边形处理"

#: of transbigdata.gisprocess.merge_polygon:2
msgid ""
"The input is the GeoDataFrame of polygon geometry, and the col name. This"
" function will merge the polygon based on the category in the mentioned "
"column"
msgstr "输入是面几何的地理数据帧和列名称。此函数将根据上述列中的类别合并多边形"

#: of transbigdata.gisprocess.merge_polygon:6
#: transbigdata.gisprocess.polyon_exterior:6
msgid "The polygon geometry"
msgstr "多边形几何"

#: of transbigdata.gisprocess.merge_polygon:8
msgid "The column name for indicating category"
msgstr "表示类别的列名"

#: of transbigdata.gisprocess.merge_polygon:11
msgid "**data1** -- The merged polygon"
msgstr "**data1** -- 合并后的多边形"

#: of transbigdata.gisprocess.polyon_exterior:2
msgid ""
"The input is the GeoDataFrame of the polygon geometry. The method will "
"construct new polygon by extending the outer boundary of the ploygon"
msgstr "输入是面几何的地理数据帧。该方法将通过扩展 ploygon 的外部边界来构造新的多边形"

#: of transbigdata.gisprocess.polyon_exterior:8
msgid "The minimum area. Polygon of less area will be removed"
msgstr "最小面积。"

#: of transbigdata.gisprocess.polyon_exterior:11
msgid "**data1** -- The processed polygon"
msgstr "**data1** -- 处理后的多边形"

#~ msgid "参数"
#~ msgstr ""

#~ msgid "返回"
#~ msgstr ""

#~ msgid "返回类型"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`ckdnearest <transbigdata.ckdnearest>`\\ "
#~ "\\(dfA\\_origin\\, dfB\\_origin\\[\\, Aname\\, "
#~ "...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`ckdnearest_point <transbigdata.ckdnearest_point>`\\ "
#~ "\\(gdA\\, gdB\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`ckdnearest_line <transbigdata.ckdnearest_line>`\\ "
#~ "\\(gdfA\\, gdfB\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`splitline_with_length "
#~ "<transbigdata.splitline_with_length>`\\ \\(Centerline\\[\\, "
#~ "maxlength\\]\\)"
#~ msgstr ""

#~ msgid ":obj:`merge_polygon <transbigdata.merge_polygon>`\\ \\(data\\, col\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`polyon_exterior <transbigdata.polyon_exterior>`\\ "
#~ "\\(data\\[\\, minarea\\]\\)"
#~ msgstr ""

#~ msgid "Parameters"
#~ msgstr "参数"

#~ msgid "Returns"
#~ msgstr "返回"

#~ msgid "Return type"
#~ msgstr "返回类型"

